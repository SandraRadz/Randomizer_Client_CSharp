//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Randomizer_Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/RandomizerLib")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoSuchUserException", Namespace="http://schemas.datacontract.org/2004/07/RandomizerLib.Exception")]
    [System.SerializableAttribute()]
    public partial class NoSuchUserException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentialsDto", Namespace="http://schemas.datacontract.org/2004/07/RandomizerLib.Dto")]
    [System.SerializableAttribute()]
    public partial class UserCredentialsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Randomizer_Client.ServiceReference.NoSuchUserException), Action="http://tempuri.org/IService1/GetUserNoSuchUserExceptionFault", Name="NoSuchUserException", Namespace="http://schemas.datacontract.org/2004/07/RandomizerLib.Exception")]
        Randomizer_Client.ServiceReference.UserDto GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<Randomizer_Client.ServiceReference.UserDto> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExistUser", ReplyAction="http://tempuri.org/IService1/ExistUserResponse")]
        bool ExistUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExistUser", ReplyAction="http://tempuri.org/IService1/ExistUserResponse")]
        System.Threading.Tasks.Task<bool> ExistUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        void RegisterUser(Randomizer_Client.ServiceReference.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(Randomizer_Client.ServiceReference.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCredentials", ReplyAction="http://tempuri.org/IService1/CheckCredentialsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Randomizer_Client.ServiceReference.NoSuchUserException), Action="http://tempuri.org/IService1/CheckCredentialsNoSuchUserExceptionFault", Name="NoSuchUserException", Namespace="http://schemas.datacontract.org/2004/07/RandomizerLib.Exception")]
        Randomizer_Client.ServiceReference.UserDto CheckCredentials(Randomizer_Client.ServiceReference.UserCredentialsDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCredentials", ReplyAction="http://tempuri.org/IService1/CheckCredentialsResponse")]
        System.Threading.Tasks.Task<Randomizer_Client.ServiceReference.UserDto> CheckCredentialsAsync(Randomizer_Client.ServiceReference.UserCredentialsDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserHistory", ReplyAction="http://tempuri.org/IService1/UserHistoryResponse")]
        void UserHistory(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserHistory", ReplyAction="http://tempuri.org/IService1/UserHistoryResponse")]
        System.Threading.Tasks.Task UserHistoryAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveHistory", ReplyAction="http://tempuri.org/IService1/SaveHistoryResponse")]
        void SaveHistory(string login, int from, int to, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveHistory", ReplyAction="http://tempuri.org/IService1/SaveHistoryResponse")]
        System.Threading.Tasks.Task SaveHistoryAsync(string login, int from, int to, int count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Randomizer_Client.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Randomizer_Client.ServiceReference.IService1>, Randomizer_Client.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Randomizer_Client.ServiceReference.UserDto GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<Randomizer_Client.ServiceReference.UserDto> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public bool ExistUser(string login) {
            return base.Channel.ExistUser(login);
        }
        
        public System.Threading.Tasks.Task<bool> ExistUserAsync(string login) {
            return base.Channel.ExistUserAsync(login);
        }
        
        public void RegisterUser(Randomizer_Client.ServiceReference.UserDto user) {
            base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(Randomizer_Client.ServiceReference.UserDto user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public Randomizer_Client.ServiceReference.UserDto CheckCredentials(Randomizer_Client.ServiceReference.UserCredentialsDto user) {
            return base.Channel.CheckCredentials(user);
        }
        
        public System.Threading.Tasks.Task<Randomizer_Client.ServiceReference.UserDto> CheckCredentialsAsync(Randomizer_Client.ServiceReference.UserCredentialsDto user) {
            return base.Channel.CheckCredentialsAsync(user);
        }
        
        public void UserHistory(string login) {
            base.Channel.UserHistory(login);
        }
        
        public System.Threading.Tasks.Task UserHistoryAsync(string login) {
            return base.Channel.UserHistoryAsync(login);
        }
        
        public void SaveHistory(string login, int from, int to, int count) {
            base.Channel.SaveHistory(login, from, to, count);
        }
        
        public System.Threading.Tasks.Task SaveHistoryAsync(string login, int from, int to, int count) {
            return base.Channel.SaveHistoryAsync(login, from, to, count);
        }
    }
}
